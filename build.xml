<?xml version="1.0" encoding="UTF-8" ?>

<!--  Catroid: An on-device graphical programming language for Android devices
      Copyright (C) 2010-2012 The Catroid Team
      (<http://code.google.com/p/catroid/wiki/Credits>)
 
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU Affero General Public License as
      published by the Free Software Foundation, either version 3 of the
      License, or (at your option) any later version.
  
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Affero General Public License for more details.
  
      You should have received a copy of the GNU Affero General Public License
      along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
 
<project basedir="." default="deploy-local" name="catroid">
  <property name="selenium.dir" value="tests/selenium" />
  <property name="selenium-grid.dir" value="tests/selenium-grid" />
  <property name="app-building.dir" value="app-building" />
  <property name="framework.dir" value="classes" />
  <property name="images.dir" value="images" />
  <property name="includes.dir" value="include" />
  <property name="css.dir" value="${includes.dir}/css" />
  <property name="modules.dir" value="modules" />
  <property name="resources.dir" value="resources" />
  <property name="addons.dir" value="addons" />
  <property name="board.dir" value="${addons.dir}/board" />
  <property name="wiki.dir" value="${addons.dir}/mediawiki" />
  <property name="projects.dir" value="${resources.dir}/projects" />
  <property name="thumbnails.dir" value="${resources.dir}/thumbnails" />
  <property name="scripts.dir" value="script" />
  <property name="tests.dir" value="${basedir}/tests/phpunit/" />
  <property name="viewer.dir" value="viewer" />
  <property name="sql.dir" value="sql" />
  <property name="pootle.dir" value="pootle" />
  <property name="sqlupdate.dir" value="${sql.dir}/catroweb/updates" />
  <property name="htaccess.file" value=".htaccess" />
  <property name="config.file" value="config.php" />
  <property name="commonFunctions.file" value="commonFunctions.php" />
  <property name="index.file" value="index.php" />
  <property name="build.file" value="build.xml" />
  <property name="thumbnail.small.file" value="${thumbnails.dir}/thumbnail_small.png" />
  <property name="thumbnail.large.file" value="${thumbnails.dir}/thumbnail_large.png" />
  <property name="init-app-building.file" value="${app-building.dir}/init_app_builder.sh" />
  <property name="build.sysclasspath" value="last" />
  <property name="file.encoding" value="UTF-8" />
  
  <property name="android-sdk.dir" value="/home/catroid/Workspace/android-sdk-linux_x86/" />

  <import file="tests/selenium-grid/build.xml"/>
  <import file="tests/selenium-grid/tools/build.xml"/>

  <target name="-conf">
    <property name="build.dir" value="build" />
    <property name="catroid.dir" value="${build.dir}/catroid" />
  </target>

  <target name="-conf-deploy-prod">
    <property name="host.ip" value="129.27.202.41" />
    <property name="host.root.dir" value="/var/www" />
    <property name="host.catroid.dir" value="${host.root.dir}/catroid" />
    <property name="host.addons.dir" value="${host.catroid.dir}/addons" />
    <property name="host.board.dir" value="${host.addons.dir}/board" />
    <property name="host.wiki.dir" value="${host.addons.dir}/mediawiki" />
  </target>

  <target name="-conf-deploy-test">
    <property name="host.ip" value="129.27.202.40" />
    <property name="host.root.dir" value="/var/www" />
    <property name="host.catroid.dir" value="${host.root.dir}/catroid" />
    <property name="host.addons.dir" value="${host.catroid.dir}/addons" />
    <property name="host.board.dir" value="${host.addons.dir}/board" />
    <property name="host.wiki.dir" value="${host.addons.dir}/mediawiki" />
  </target>
  
  <target name="-conf-deploy-alex">
      <property name="host.ip" value="www.guetler.at" />
      <property name="host.root.dir" value="/var/www/vhosts/guetler.at/httpdocs" />
      <property name="host.catroid.dir" value="${host.root.dir}/catroweb" />
      <property name="host.addons.dir" value="${host.catroid.dir}/addons" />
      <property name="host.board.dir" value="${host.addons.dir}/board" />
      <property name="host.wiki.dir" value="${host.addons.dir}/mediawiki" />
  </target>
  
  <target name="-conf-deploy-catroid-test">
    <property name="host.ip" value="129.27.202.39" />
    <property name="host.root.dir" value="/var/www" />
    <property name="host.catroid.dir" value="${host.root.dir}/catroid" />
    <property name="host.addons.dir" value="${host.catroid.dir}/addons" />
    <property name="host.board.dir" value="${host.addons.dir}/board" />
    <property name="host.wiki.dir" value="${host.addons.dir}/mediawiki" />
  </target>
  
  <target name="-conf-deploy-testlocal-test">
    <property name="host.ip" value="129.27.202.38" />
    <property name="host.root.dir" value="/var/www" />
    <property name="host.catroid.dir" value="${host.root.dir}/catroid" />
    <property name="host.addons.dir" value="${host.catroid.dir}/addons" />
    <property name="host.board.dir" value="${host.addons.dir}/board" />
    <property name="host.wiki.dir" value="${host.addons.dir}/mediawiki" />
  </target>
  
  <target name="-validator-tests">
    <input message="Did you validate the page on http://validator.w3.org?"
         validargs="y,n"
         addproperty="do.continue" />
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.continue}" />
    </condition>
    <fail if="do.abort">You have to validate the page on http://validator.w3.org before you can continue!</fail>
  </target>
  
  <target name="-selenium-android-tests" depends="-selenium-start-android-emulator, -selenium-start-server-android"/>
  
  <target name="-selenium-start-server">
    <java jar="${selenium.dir}/server/selenium-server.jar" fork="true" spawn="true"/>
    <sleep seconds="3" />
  </target>
  
  <target name="-selenium-start-android-emulator">
    <exec dir="${selenium.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" AndroidBrowserTestSuite.php"/>
    </exec>
    <exec dir="${android-sdk.dir}/tools" executable="${android-sdk.dir}/tools/emulator" failonerror="false" osfamily="Unix" spawn="true">
      <arg line=" -avd catroidandroidtest -port 5560"/>
    </exec>
  </target>
  
  <target name="-selenium-start-server-android">
    <echo message="Setting up port forwarding..." />
    <exec dir="${android-sdk.dir}/platform-tools" executable="${android-sdk.dir}/platform-tools/adb" failonerror="false" osfamily="Unix" spawn="true">
      <arg line=" -s emulator-5560 wait-for-device shell input keyevent 82"/>
    </exec>
    <exec dir="${android-sdk.dir}/platform-tools" executable="${android-sdk.dir}/platform-tools/adb" failonerror="false" osfamily="Unix" spawn="true">
      <arg line=" -s emulator-5560 wait-for-device forward tcp:8080 tcp:8080"/>
    </exec> 
    <echo message="Starting android webdriver server" />
    <exec dir="${android-sdk.dir}/platform-tools" executable="${android-sdk.dir}/platform-tools/adb" failonerror="false" osfamily="Unix" spawn="true">
      <arg line=" -s emulator-5560 wait-for-device shell monkey -p org.openqa.selenium.android.app 1"/>
    </exec>  
  </target>
  
  <target name="-selenium-tests-android">
    <waitfor maxwait="20" maxwaitunit="second">
      <and>
        <socket server="localhost" port="4444"/>
      </and>
    </waitfor>
    
   <exec dir="${selenium.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" AndroidBrowserTestSuite.php"/>
    </exec>
    <exec dir="${selenium.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" AndroidBrowserTestSuite.php"/>
    </exec>
  </target>

  <target name="-start-selenium-grid-remote-control">
    <property name="test.role" value="rc"/>
    <property name="test.hubURL" value="http://localhost:4444/grid/register"/>
    <property name="test.port" value="5555"/>
    <property name="test.browserName" value="firefox"/>
    <property name="test.browserVersion" value="3.6"/>
    <property name="test.maxInstances" value="5"/>
    <property name="test.platform" value=""/>
    <property name="test.nodeTimeout" value="30"/>
    <antcall target='selenium-tools.launch-remote-control'>
      <param name="role" value="${test.role}"/>
      <param name="hubURL" value="${test.hubURL}"/>
      <param name="port" value="${test.port}"/>
      <param name="browserName" value="${test.browserName}"/>
      <param name="browserVersion" value="${test.browserVersion}"/>
      <param name="maxInstances" value="${test.maxInstances}"/>
      <param name="platform" value="${test.platform}"/>
      <param name="nodeTimeout" value="${test.nodeTimeout}"/>
    </antcall>
  </target>

  <target name="-start-selenium-grid-local-testsuite">
    <!--<antcall target='-start-selenium-grid-remote-control'/>-->
    <antcall target='-start-selenium-grid-remote-control'>
      <param name="test.role" value="webdriver" />
      <param name="test.port" value="5556" />
    </antcall>
    <antcall target='selenium-tools.launch-hub'/>
  </target>

  <target name="-selenium-grid-tests-catroid-local" depends="-get-selenium-grid-test-browser, -start-selenium-grid-local-testsuite">
    <echo message=""/>
    <echo message="========== HTTP REPORT ========== "/>
    <echo message=""/>
    <echo message="check your test report at:"/>
    <echo message=" http://localhost/tests/selenium-grid/target/reports/catroid"/>
    <echo message=""/>
    <echo message=""/>
  	
    <antcall target='selenium-grid.run-catroid-tests'>
      <param name="browser" value="${test.browserName}" />
    </antcall>
  </target>
  
  <target name="-selenium-grid-stop">
    <antcall target='selenium-tools.stop-hub'/>
    <antcall target='selenium-tools.stop-remote-controls'/>
  </target>

  <target name="-selenium-grid-single-test" depends="-get-selenium-grid-test-browser, -get-selenium-grid-single-test-parameters, -start-selenium-grid-local-testsuite">
    <echo message=""/>
    <echo message="========== HTTP REPORT ========== "/>
    <echo message=""/>
    <echo message="check your test report at:"/>
    <echo message=" http://localhost/tests/selenium-grid/target/reports"/>
    <echo message=""/>
    <echo message=""/>

    <antcall target='selenium-grid.run-single-test'>
      <param name="single-test-class" value="${test.class}" />
      <param name="single-test-method" value="${test.method}" />
      <param name="browser" value="${test.browserName}" />
    </antcall>
  </target>
  
  <target name="-get-selenium-grid-single-test-parameters">
    <input
      message="Please enter a class to test (e.g.: catroid.LicenseTests): "
      addproperty="test.class"
    />

    <input
      message="Please enter a method to test (e.g.: imprint): "
      addproperty="test.method"
      defaultvalue=".*"
    />

    <echo message=""/>
    <echo message="========== Notice ========== "/>
    <echo message=""/>
    <echo message="you can repeat this test by running:"/>
    <echo message=" ant run-selenium-single-test -Dtest.browserName=${test.browserName} -Dtest.class=${test.class} -Dtest.method=${test.method}"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <target name="-selenium-grid-group-test" depends="-get-selenium-grid-test-browser, -get-selenium-grid-group-test-parameter, -start-selenium-grid-local-testsuite">
    <echo message=""/>
    <echo message="========== HTTP REPORT ========== "/>
    <echo message=""/>
    <echo message="check your test report at:"/>
    <echo message=" http://localhost/tests/selenium-grid/target/reports"/>
    <echo message=""/>
    <echo message=""/>

    <antcall target='selenium-grid.run-group-test'>
      <param name="group-test" value="${test.group}" />
      <param name="browser" value="${test.browserName}" />
    </antcall>
  </target>
  
  <target name="-get-selenium-grid-group-test-parameter">
    <input
      message="Please enter a group to test (e.g.: admin, api, catroid): "
      addproperty="test.group"
    />

    <echo message=""/>
    <echo message="========== Notice ========== "/>
    <echo message=""/>
    <echo message="you can repeat this test by running:"/>
    <echo message=" ant run-selenium-group-test -Dtest.browserName=${test.browserName} -Dtest.group=${test.group}"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <target name="-selenium-grid-tests-testlocal" depends="-get-selenium-grid-test-browser">
    <echo message=""/>
    <echo message="========== HTTP REPORT ========== "/>
    <echo message=""/>
    <echo message="check your test report at:"/>
    <echo message=" http://kittyroidlocal/tests/selenium-grid/target/reports"/>
    <echo message=" "/>
    <echo message=""/>

    <sshexec host="${host.ip}"
           trust="true"
           username="${host.user}"
           password="${host.pass}"
           command="export DISPLAY=:0.0; sudo xhost +; cd ${host.catroid.dir}; ant stop-selenium-grid; ant run-selenium-local-tests -DwebSite=http://kittyroidlocal/ -Dtest.browserName=${test.browserName} -DmaxInstances=6" />
  </target>

  <target name="-get-selenium-grid-test-browser">
    <input
      message="Please enter an environment to test: "
      addproperty="test.browserName"
      defaultvalue="firefox"
    />
  </target>
  
  <target name="-phpunit-tests" depends="-unittest-framework, -unittest-admin, -unittest-catroid, -unittest-api"/>
  <target name="-phpunit-framework-tests" depends="-unittest-framework"/>
  <target name="-phpunit-admin-tests" depends="-unittest-admin"/>
  <target name="-phpunit-catroid-tests" depends="-unittest-catroid"/>
  <target name="-phpunit-api-tests" depends="-unittest-api"/>
  
  <target name="-unittest-catroid">
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" catroid"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" catroid"/>
    </exec>
  </target>
  
  <target name="-unittest-admin">
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" admin"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" admin"/>
    </exec>
  </target>
  
  <target name="-unittest-framework">
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" framework"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" framework"/>
    </exec>
  </target>
  
  <target name="-unittest-api">
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" api"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" api"/>
    </exec>
  </target>

  <target name="-user-pass-prompt">
    <input
      message="Please enter Username for Host ${host.ip}: "
      addproperty="host.user"
    />
    <input
      message="Please enter Password for User ${host.user} on Host ${host.ip}: "
      addproperty="host.pass"
    />
  </target>
  
  <target name="-update-remote-database">
  <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="cd ${host.catroid.dir}/${sql.dir}/; php dbupdate.php" />  
  </target>

  <target name="-update-sql-diagram">
  <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="cd ${host.catroid.dir}/${sql.dir}/; chmod +x create_diagram.sh; ./create_diagram.sh" />  
  </target>
  
  <target name="-update-app-building">
  <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="cd ${host.catroid.dir}/${app-building.dir}/; chmod +x init_app_builder.sh; ./init_app_builder.sh" />  
  </target>
  
  <target name="-init-remote-database">
  <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="cd ${host.catroid.dir}/${sql.dir}/; php dbinit.php" />  
  </target>
  
  <target name="-update-local-database">
  <exec dir="${sql.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="php"/>
      <arg line=" dbupdate.php"/>
    </exec>
    <exec dir="${sql.dir}" executable="php" failonerror="true" osfamily="Unix">
      <arg line=" dbupdate.php"/>
    </exec>
  </target>
  
  <target name="-init-local-database">
  <exec dir="${sql.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="php"/>
      <arg line=" dbinit.php"/>
    </exec>
    <exec dir="${sql.dir}" executable="php" failonerror="true" osfamily="Unix">
      <arg line=" dbinit.php"/>
    </exec>
  </target>
  
  <target name="-generate-strings-xml">
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" framework/languageTest.php"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" framework/languageTest.php"/>
    </exec>
  <exec dir="${pootle.dir}" executable="cmd" failonerror="true" osfamily="Windows">
    <arg value="/c"/>
    <arg value="php"/>
    <arg line=" generateStringsXml.php"/>
  </exec>
  <exec dir="${pootle.dir}" executable="php" failonerror="true" osfamily="Unix">
    <arg line=" generateStringsXml.php"/>
  </exec>
  </target>
  
  <target name="-generate-pootle-file" depends="-generate-strings-xml">
  <exec dir="${pootle.dir}" executable="cmd" failonerror="true" osfamily="Windows">
    <arg value="/c"/>
    <arg value="php"/>
    <arg line=" generatePootleFile.php"/>
  </exec>
  <exec dir="${pootle.dir}" executable="php" failonerror="true" osfamily="Unix">
    <arg line=" generatePootleFile.php"/>
  </exec>
  </target>
  
  <target name="-generate-language-pack">
    <input
      message="Enter the language-shortcut for the language-pack: "
      addproperty="language.shortcut"
    />
    <exec dir="${tests.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="phpunit.bat"/>
      <arg line=" framework/languageTest.php"/>
    </exec>
    <exec dir="${tests.dir}" executable="phpunit" failonerror="true" osfamily="Unix">
      <arg line=" framework/languageTest.php"/>
    </exec>
  <exec dir="${pootle.dir}" executable="cmd" failonerror="true" osfamily="Windows">
    <arg value="/c"/>
    <arg value="php"/>
    <arg line=" generateLanguagePackFromXlf.php ${language.shortcut}"/>
  </exec>
  <exec dir="${pootle.dir}" executable="php" failonerror="true" osfamily="Unix">
    <arg line=" generateLanguagePackFromXlf.php ${language.shortcut}"/>
  </exec>
  </target>

  <target name="-clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="-cleanup">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${build.dir}" />
    </delete>
  </target>

  <target name="-create-dirs">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${catroid.dir}" />
    <mkdir dir="${catroid.dir}/${app-building.dir}" />
    <mkdir dir="${catroid.dir}/${framework.dir}" />
    <mkdir dir="${catroid.dir}/${images.dir}" />
    <mkdir dir="${catroid.dir}/${includes.dir}" />
    <mkdir dir="${catroid.dir}/${modules.dir}" />
    <mkdir dir="${catroid.dir}/${scripts.dir}" />
    <mkdir dir="${catroid.dir}/${viewer.dir}" />
    <mkdir dir="${catroid.dir}/${thumbnails.dir}" />
    <mkdir dir="${catroid.dir}/${addons.dir}" />
    <mkdir dir="${catroid.dir}/${sql.dir}" />
  </target>

  <target name="-create-dirs-test">
    <mkdir dir="${catroid.dir}/${selenium-grid.dir}" />
  </target>

  <target name="-copy-files" depends="-copy-rootfiles, -copy-framework, -copy-viewer, -copy-modules, -copy-images, -copy-includes, -copy-thumbnails, -copy-app-building, -copy-sql" />

  <target name="-copy-rootfiles">
    <copy file="${htaccess.file}" toDir="${catroid.dir}" />
    <copy file="${config.file}" toDir="${catroid.dir}" />
    <copy file="${commonFunctions.file}" toDir="${catroid.dir}" />
    <copy file="${index.file}" toDir="${catroid.dir}" />
  </target>

  <target name="-copy-framework">
    <copy todir="${catroid.dir}/${framework.dir}">
      <fileset dir="${framework.dir}"/>
    </copy>
  </target>
  
  <target name="-copy-sql">
    <copy todir="${catroid.dir}/${sql.dir}">
      <fileset dir="${sql.dir}"/>
    </copy>
  </target>

  <target name="-copy-viewer">
    <copy todir="${catroid.dir}/${viewer.dir}">
      <fileset dir="${viewer.dir}"/>
    </copy>
  </target>

  <target name="-copy-modules">
    <copy todir="${catroid.dir}/${modules.dir}">
      <fileset dir="${modules.dir}"/>
    </copy>
  </target>

  <target name="-copy-scripts">
    <copy todir="${catroid.dir}/${scripts.dir}">
      <fileset dir="${scripts.dir}"/>
    </copy>
  </target>

  <target name="-copy-images">
    <copy todir="${catroid.dir}/${images.dir}">
      <fileset dir="${images.dir}"/>
    </copy>
  </target>

  <target name="-copy-includes">
    <copy todir="${catroid.dir}/${includes.dir}">
      <fileset dir="${includes.dir}"/>
    </copy>
  </target>
  
  <target name="-copy-thumbnails">
    <copy file="${thumbnail.small.file}" toDir="${catroid.dir}/${thumbnails.dir}" />
    <copy file="${thumbnail.large.file}" toDir="${catroid.dir}/${thumbnails.dir}" />
  </target>
  
  <target name="-copy-app-building">
    <copy file="${init-app-building.file}" toDir="${catroid.dir}/${app-building.dir}" />
  </target>

  <target name="-copy-selenium-tests">
    <copy todir="${catroid.dir}/${selenium-grid.dir}">
      <fileset dir="${selenium-grid.dir}" excludes="target/"/>
    </copy>
    <copy file="${build.file}" toDir="${catroid.dir}" />
  </target>
  
  <target name="-copy-board">
    <copy todir="${catroid.dir}/${board.dir}">
      <fileset dir="${board.dir}"/>
    </copy>
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${catroid.dir}/${board.dir}/cache" />
    </delete>
    <copy file="${board.dir}/cache/.htaccess" toDir="${catroid.dir}/${board.dir}/cache" />
    <copy file="${board.dir}/cache/data_bots.php" toDir="${catroid.dir}/${board.dir}/cache" />
    <copy file="${board.dir}/cache/data_hooks.php" toDir="${catroid.dir}/${board.dir}/cache" />
    <copy file="${board.dir}/cache/index.htm" toDir="${catroid.dir}/${board.dir}/cache" />
  </target>
  
  <target name="-copy-wiki">
    <copy todir="${catroid.dir}/${wiki.dir}">
      <fileset dir="${wiki.dir}"/>
    </copy> <exec dir="${sql.dir}" executable="cmd" failonerror="true" osfamily="Windows">
      <arg value="/c"/>
      <arg value="php"/>
      <arg line=" dbupdate.php"/>
    </exec>
  </target>
	
  <target name="-set-catroid-dir-permissions">
	<sshexec host="${host.ip}"
	         trust="true"
	         username="${host.user}"
	         password="${host.pass}"
	         command="chmod -R 777 ${host.catroid.dir}/${includes.dir}/xml/lang" />
  </target>
	
  <target name="-set-board-dir-permissions">
	<sshexec host="${host.ip}"
	         trust="true"
	         username="${host.user}"
	         password="${host.pass}"
	         command="chmod -R 777 ${host.board.dir}/cache ${host.board.dir}/images/avatars/uploads" />
  </target>

  <target name="-undeploy">
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="rm -rf ${host.catroid.dir}/${images.dir} ${host.catroid.dir}/${includes.dir} ${host.catroid.dir}/${framework.dir} ${host.catroid.dir}/${modules.dir} ${host.catroid.dir}/${viewer.dir} ${host.catroid.dir}/${scripts.dir} ${host.catroid.dir}/${sql.dir} ${host.catroid.dir}/tests" />
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="rm -rf ${host.catroid.dir}/${index.file} ${host.catroid.dir}/${config.file} ${host.catroid.dir}/${commonFunctions.file} ${host.catroid.dir}/${htaccess.file}" />
  </target>
  
  <target name="-undeploy-board">
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="rm -rf ${host.board.dir}" />
  </target>
  
  <target name="-undeploy-wiki">
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="rm -rf ${host.wiki.dir}" />
  </target>

  <target name="-deploy">
    <scp todir="${host.user}:${host.pass}@${host.ip}:${host.catroid.dir}/"
         trust="true" >
      <fileset dir="${catroid.dir}" />
    </scp>
  </target>
  
  <target name="-deploy-board">
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="mkdir ${host.board.dir}" />
    <scp todir="${host.user}:${host.pass}@${host.ip}:${host.board.dir}/"
         trust="true" >
      <fileset dir="${catroid.dir}/${board.dir}" />
    </scp>
    <sshexec host="${host.ip}"
           trust="true"
           username="${host.user}"
           password="${host.pass}"
           command="chmod -R 777 ${host.board.dir}/cache ${host.board.dir}/files ${host.board.dir}/store ${host.board.dir}/images/avatars/upload" />
  </target>
  
  <target name="-deploy-wiki">
    <sshexec host="${host.ip}"
             trust="true"
             username="${host.user}"
             password="${host.pass}"
             command="mkdir ${host.wiki.dir}" />
    <scp todir="${host.user}:${host.pass}@${host.ip}:${host.wiki.dir}/"
         trust="true" >
      <fileset dir="${catroid.dir}/${wiki.dir}" />
    </scp>
  </target>

	<!-- http://localhost/ -->
  <target name="deploy-local" depends="-conf, -clean, -create-dirs, -conf-deploy-test, -copy-files" />
  <target name="run-phpunit-tests" depends="-phpunit-tests" />
  <target name="run-phpunit-framework-tests" depends="-phpunit-framework-tests" />
  <target name="run-phpunit-catroid-tests" depends="-phpunit-catroid-tests" />
  <target name="run-phpunit-admin-tests" depends="-phpunit-admin-tests" />
  <target name="run-phpunit-api-tests" depends="-phpunit-api-tests" />
  <target name="run-selenium-local-tests" depends="-selenium-grid-tests-catroid-local" />
  <target name="run-selenium-single-test" depends="-selenium-grid-single-test" />
  <target name="run-selenium-group-test" depends="-selenium-grid-group-test" />
  <target name="stop-selenium-grid" depends="-selenium-grid-stop"/>
  <target name="start-android-emulator" depends="-selenium-start-android-emulator, -selenium-start-server-android" />
  <target name="run-android-tests" depends="-selenium-android-tests" />
  <target name="run-validator-tests" depends="-validator-tests" />
  <target name="update-db" depends="-update-local-database" />
  <target name="init-db" depends="-init-local-database, -update-local-database" />
  <target name="generate-strings-xml" depends="-generate-strings-xml" />
  <target name="generate-pootle-file" depends="-generate-pootle-file" />
  <target name="generate-language-pack" depends="-generate-language-pack" />

	<!-- http://catroidwebtest.ist.tugraz.at/ -->
  <target name="deploy-test" depends="-conf, -clean, -create-dirs, -conf-deploy-test, -copy-files, -user-pass-prompt, -undeploy, -deploy, -set-catroid-dir-permissions, -update-remote-database, -update-sql-diagram, -update-app-building, -cleanup" />
  <target name="deploy-test-board" depends="-conf, -clean, -create-dirs, -conf-deploy-test, -copy-board, -user-pass-prompt, -undeploy-board, -deploy-board, -cleanup" />
  <target name="deploy-test-wiki" depends="-conf, -clean, -create-dirs, -conf-deploy-test, -copy-wiki, -user-pass-prompt, -undeploy-wiki, -deploy-wiki, -cleanup" />

	<!-- http://www.guetler.at/ -->
  <target name="deploy-alex" depends="-conf, -clean, -create-dirs, -conf-deploy-alex, -copy-files, -user-pass-prompt, -undeploy, -deploy, -set-catroid-dir-permissions, -update-remote-database, -cleanup" />

	<!-- http://catroidtest.ist.tugraz.at/ -->
  <target name="deploy-catroid-test" depends="-conf, -clean, -create-dirs, -conf-deploy-catroid-test, -copy-files, -user-pass-prompt, -set-catroid-dir-permissions, -undeploy, -deploy, -set-catroid-dir-permissions, -init-remote-database,-update-remote-database, -update-app-building, -cleanup" />

	<!-- http://catroidtestserver.ist.tugraz.at/ -->
  <target name="deploy-testlocal-with-tests" depends="-conf, -clean, -create-dirs, -create-dirs-test, -conf-deploy-testlocal-test, -copy-files, -copy-selenium-tests, -user-pass-prompt, -undeploy, -deploy, -update-remote-database, -cleanup" />
	<target name="run-selenium-remote-tests" depends="deploy-testlocal-with-tests, -selenium-grid-tests-testlocal" />

	<!-- http://catroid.org/ - http://catroidweb.ist.tugraz.at/ -->
  <target name="deploy-public" depends="-conf, -clean, -create-dirs, -conf-deploy-prod, -copy-files, -user-pass-prompt, -undeploy, -deploy, -update-remote-database, -update-app-building, -cleanup" />
  <target name="deploy-public-board" depends="-conf, -clean, -create-dirs, -conf-deploy-prod, -copy-board, -user-pass-prompt, -undeploy-board, -deploy-board, -cleanup" />
  <target name="deploy-public-wiki" depends="-conf, -clean, -create-dirs, -conf-deploy-prod, -copy-wiki, -user-pass-prompt, -undeploy-wiki, -deploy-wiki, -cleanup" />
</project>
